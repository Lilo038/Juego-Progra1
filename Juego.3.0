#include <iostream>
using namespace std;

void esctablero(int tablero[10][11], int x, int y, int fpelota, int cpelota);
void pared(int tablero[10][11],int x,int y, int fpelota, int cpelota,bool llegoApared);


int main() {
    int tablero[10][11];
    int fpelota, cpelota, y, x, ingreso;
    bool game_over,llegoAparedDer,llegoAtecho,llegoAparedIz;
    fpelota = 9;
    cpelota = 5;
    llegoAparedDer=false;
	llegoAtecho=false;
    game_over = false;
    llegoAparedIz=false;

    // Valores iniciales del tablero
    for (x = 0; x < 10; x++) {
        for (y = 0; y < 11; y++) {
            if (x == 0) {
                tablero[x][y] = 1;
            } else if(x== 1){
            	tablero[x][y] = 1;
			}else if(x==2){
				tablero[x][y] = 1;
			}else if(x==3){
				tablero[x][y] = 1;
			}else {
                tablero[x][y] = 0;  // espacio vacío
			}
            }
            if (x == fpelota && y == cpelota) {
                tablero[fpelota][cpelota] = 9;
            }
        }
		
    do {
		cout << "Ingrese a dónde desea moverse" << endl; ///esto tiene que ser metodo para que cuando llegue la utlima fila.
        cout << "1 - Moverse hacia la izquierda" << endl;
        cout << "2 - Moverse hacia el centro" << endl;
        cout << "3 - Moverse hacia la derecha" << endl;
        cin >> ingreso;
        llegoAparedDer==false;
        llegoAtecho=false;
        llegoAparedIz=false;
        
        tablero[fpelota][cpelota] = tablero[fpelota][cpelota] = 9;
        esctablero(tablero, x, y, fpelota, cpelota);

        switch (ingreso) {
            case 1:
                //comio= false;
                //llegoAPared=false;
                do {
                    tablero[fpelota][cpelota] = 0;
					if(llegoAtecho==false){
                    	if (fpelota!=0){
                    		fpelota=fpelota-1;
						}
						if (fpelota==0){
							llegoAtecho=true;
						}
					}else{
						fpelota=fpelota+1;   
					}
                    if(llegoAparedIz==false){
	                    
	                    if (cpelota != 0) {
	                        cpelota = cpelota - 1;    
                    	}
                    	if (cpelota==0){
                    		llegoAparedIz=true;
						}
               	 	}
					else {
						if (llegoAparedDer==false){
	                   	 		cpelota = cpelota + 1;  // Rebote hacia la derecha
								if(cpelota>=10){
								llegoAparedDer=true;  
							}
                           
                       }else{
                       	   cpelota = cpelota - 1;  // Rebote hacia la derecha
					   }
                    
                   
                    if (tablero[fpelota][cpelota] == 0) { //remplazo del 0 por el 9
                        tablero[fpelota][cpelota] = 9; 
                        esctablero(tablero, x, y, fpelota, cpelota);  // escribir tablero
                    }
                    
                    if (tablero[fpelota][cpelota] == 1) {
                        tablero[fpelota][cpelota] = tablero[fpelota][cpelota] = 9;
                        esctablero(tablero, x, y, fpelota, cpelota);
                        //comio=true;
                    }
                }
                    
            	// metodo que devuelva si esta en una pared
                //pared (tablero, x, y, fpelota, cpelota,llegoApared);
                  
                    
                } while (fpelota!=9);//tiene que ser hasta que llego a pared sea true y comio sea true.
                tablero[fpelota][cpelota] = 0;
                ingreso=3;
                break;

            case 2:
  
                do {
                    tablero[fpelota][cpelota] = 0;
                    if (fpelota != 0) {
                        fpelota = fpelota - 1;
                    }

                    if (tablero[fpelota][cpelota] == 0) {
                        tablero[fpelota][cpelota] = 9;
                        esctablero(tablero, x, y, fpelota, cpelota);  // escribir tablero
                    }
                    if (tablero[fpelota][cpelota] == 1) {
                        tablero[fpelota][cpelota] = tablero[fpelota][cpelota] = 9;
                        esctablero(tablero, x, y, fpelota, cpelota);
                    }
                } while (fpelota != 0);
                tablero[fpelota][cpelota] = 0;
                break;

            case 3:
    
                do {
                    tablero[fpelota][cpelota] = 0;
					if(llegoAtecho==false){
                    	if (fpelota!=0){
                    		fpelota=fpelota-1;
						}
						if (fpelota==0){
							llegoAtecho=true;
						}
					}else{
						fpelota=fpelota+1;   
					}
                    if(llegoAparedIz==false){
	                    
	                    if (cpelota != 10) {
	                        cpelota = cpelota + 1;    
                    	}
                    	if (cpelota==10){
                    		llegoAparedIz=true;
						}
               	 	}
					else {
						if (llegoAparedDer==false){
	                   	 		cpelota = cpelota - 1;  // Rebote hacia la derecha
								if(cpelota<=0){
								llegoAparedDer=true;  
							}
                           
                       }else{
                       	   cpelota = cpelota + 1;  // Rebote hacia la derecha
					   }
                    
                   
                    if (tablero[fpelota][cpelota] == 0) { //remplazo del 0 por el 9
                        tablero[fpelota][cpelota] = 9; 
                        esctablero(tablero, x, y, fpelota, cpelota);  // escribir tablero
                    }
                    
                    if (tablero[fpelota][cpelota] == 1) {
                        tablero[fpelota][cpelota] = tablero[fpelota][cpelota] = 9;
                        esctablero(tablero, x, y, fpelota, cpelota);
                        //comio=true;
                    }
                }
                    
            	// metodo que devuelva si esta en una pared
                //pared (tablero, x, y, fpelota, cpelota,llegoApared);
                  
                    
                } while (fpelota!=9);//tiene que ser hasta que llego a pared sea true y comio sea true.
                tablero[fpelota][cpelota] = 0;
                ingreso=1;
                break;
        }
    } while (game_over == false);
}

void esctablero(int tablero[10][11], int x, int y, int fpelota, int cpelota) {
    for (x = 0; x < 10; x++) {
        for (y = 0; y < 11; y++) {
            cout << tablero[x][y];  // escribir tablero
        }
        cout << endl;
    }
    system("pause");
    system("cls");
}
void pared(int tablero[10][11],int x,int y, int fpelota, int cpelota, bool llegoApared){
	for(x=0;x<10;x++){
		if (tablero[0][fpelota]==9 or tablero[9][fpelota]==9){
			llegoApared=true;
		}
	}
}
